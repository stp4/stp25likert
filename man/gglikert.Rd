% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gglikert.R
\name{gglikert}
\alias{gglikert}
\alias{gglikert_data}
\alias{gglikert_stacked}
\title{Plotting Likert-type items}
\usage{
gglikert(
  data,
  include = dplyr::everything(),
  weights = NULL,
  y = ".question",
  variable_labels = NULL,
  sort = c("none", "ascending", "descending"),
  sort_method = c("prop", "mean", "median"),
  sort_prop_include_center = totals_include_center,
  exclude_fill_values = NULL,
  add_labels = TRUE,
  labels_size = 3.5,
  labels_color = "black",
  labels_accuracy = 1,
  labels_hide_below = 0.05,
  add_totals = FALSE,
  totals_size = labels_size * 0.9,
  totals_color = "black",
  totals_accuracy = labels_accuracy,
  totals_include_center = FALSE,
  totals_hjust = 0.1,
  y_reverse = TRUE,
  y_label_wrap = 50,
  reverse_likert = FALSE,
  width = 0.9,
  facet_rows = NULL,
  facet_cols = NULL,
  facet_label_wrap = 50
)

gglikert_data(
  data,
  include = dplyr::everything(),
  weights = NULL,
  variable_labels = NULL,
  sort = c("none", "ascending", "descending"),
  sort_method = c("prop", "mean", "median"),
  sort_prop_include_center = TRUE,
  exclude_fill_values = NULL
)

gglikert_stacked(
  data,
  include = dplyr::everything(),
  weights = NULL,
  y = ".question",
  variable_labels = NULL,
  sort = c("none", "ascending", "descending"),
  sort_method = c("prop", "mean", "median"),
  sort_prop_include_center = FALSE,
  add_labels = TRUE,
  labels_size = 3.5,
  labels_color = "black",
  labels_accuracy = 1,
  labels_hide_below = 0.05,
  add_median_line = FALSE,
  y_reverse = TRUE,
  y_label_wrap = 50,
  reverse_fill = TRUE,
  width = 0.9
)
}
\arguments{
\item{data}{a data frame}

\item{include}{variables to include, accept  tidy-select dplyr::select 
syntax}

\item{weights}{optional variable name of a weighting variable,
accept  tidy-select dplyr::select  syntax}

\item{y}{name of the variable to be plotted on y axis (relevant when
.question is mapped to "facets, see examples),
accept  tidy-select dplyr::select  syntax}

\item{variable_labels}{a named list or a named vector of custom variable
labels}

\item{sort}{should variables be sorted?}

\item{sort_method}{method used to sort the variables: prop sort according
to the proportion of answers higher than the centered level, mean
considers answer as a score and sort according to the mean score, median
used the median and the majority judgment rule for tie-breaking.}

\item{sort_prop_include_center}{when sorting with prop and if the number
of levels is uneven, should half of the central level be taken into account
to compute the proportion?}

\item{exclude_fill_values}{Vector of values that should not be displayed
(but still taken into account for computing proportions),
see  position_likert()}

\item{add_labels}{should percentage labels be added to the plot?}

\item{labels_size}{size of the percentage labels}

\item{labels_color}{color of the percentage labels}

\item{labels_accuracy}{accuracy of the percentages, see
scales::label_percent()}

\item{labels_hide_below}{if provided, values below will be masked, see
label_percent_abs()}

\item{add_totals}{should the total proportions of negative and positive
answers be added to plot? 
This option is not compatible with facets!}

\item{totals_size}{size of the total proportions}

\item{totals_color}{color of the total proportions}

\item{totals_accuracy}{accuracy of the total proportions, see
scales::label_percent()}

\item{totals_include_center}{if the number of levels is uneven, should half
of the center level be added to the total proportions?}

\item{totals_hjust}{horizontal adjustment of totals labels on the x axis}

\item{y_reverse}{should the y axis be reversed?}

\item{y_label_wrap}{number of characters per line for y axis labels, see
scales::label_wrap()}

\item{reverse_likert}{if TRUE, will reverse the default stacking order,
see  position_likert()}

\item{width}{bar width, see  ggplot2::geom_bar()}

\item{facet_rows, facet_cols}{A set of variables or expressions quoted by
 ggplot2::vars()  and defining faceting groups on the rows or columns
dimension (see examples)}

\item{facet_label_wrap}{number of characters per line for facet labels, see
ggplot2::label_wrap_gen()}

\item{add_median_line}{add a vertical line at 50%?}

\item{reverse_fill}{if TRUE, will reverse the default stacking order,
see ggplot2::position_fill}

\item{totals_fontface}{font face of the total proportions}
}
\value{
A ggplot2 plot or a tibble.
}
\description{
stolen from Joseph Larmarange
https://github.com/larmarange/ggstats/tree/main
}
\examples{

library(ggplot2)


DF <- dummy_likert_data()

gglikert(DF, include = q1:q9)

gglikert(DF, include = q1:q9, sort = "ascending")

#gglikert(DF, include = q1:q9, sort = "ascending", sort_prop_include_center = TRUE)
#gglikert(DF, include = q1:q9, sort = "ascending", sort_method = "mean")
#gglikert(DF, include = q1:q9, reverse_likert = TRUE)
#gglikert(DF, include = q1:q9, add_totals = FALSE, add_labels = FALSE)
#gglikert(DF, include = q1:q9, exclude_fill_values = "Neither agree nor disagree")


# Facets

gglikert(DF, q1:q6, facet_rows = vars(sex))
# gglikert(DF, q1:q6, facet_cols = vars(sex))

gglikert(DF, q1:q6, y = "sex", facet_rows = vars(age))


gglikert_stacked(df, q1:q6)

gglikert_stacked(df, q1:q6, add_median_line = TRUE, sort = "asc")


# gglikert_stacked(df_group, 
#  q1:q6, y = "group", add_median_line = TRUE) +
#  facet_grid(rows = vars(.question))

}
